pipeline {
  agent { node { label 'austin' } }
    environment {
      docker_args="--device=/dev/kfd --device=/dev/dri --group-add video --group-add render --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -v=/var/jenkins/:/var/jenkins"
  }
  parameters {
    string(name: 'PERF_TEST_OVERRIDE', defaultValue: '',  description: 'Add extra env vars for the MIOpenDriver cmd, comma separated')
    booleanParam(name: 'PERF_TEST_FP32', defaultValue : true, description: 'Run FP16 tests')
    booleanParam(name: 'PERF_TEST_FP16', defaultValue : true, description: 'Run FP16 tests')
    booleanParam(name: 'PERF_TEST_ARCHIVE', defaultValue : true, description: 'Archive results from this run')
  }
  stages {
        stage("Performance Tests - gfx942") {
            //when {
            //    expression {params.PERF_TEST && params.TARGET_GFX90A}
            //}
            parallel{
                stage('Fp32 BS128 Hip Performance Resnet50_v1.5 gfx90a'){
                    when {
                        expression {params.PERF_TEST_FP32}
                    }
                    agent{ label utilz.rocmnode("austin")}
                    steps{
                        sh "TEST"
                        RunPerfTest(gpu_arch: "gfx90a", filename: "Resnet50_v1.5_FP32_BS128.txt" )
                    }
                }
                stage('Fp32 BS256 Hip Performance Resnet50_v1.5 gfx90a'){
                    when {
                        expression {params.PERF_TEST_FP32}
                    }
                    agent{ label utilz.rocmnode("austin")}
                    steps{
                        RunPerfTest(gpu_arch: "gfx90a", filename: "Resnet50_v1.5_FP32_BS256.txt" )
                    }
                }
            }
         }
    }
}
